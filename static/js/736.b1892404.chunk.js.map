{"version":3,"file":"static/js/736.b1892404.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,GAAAA,GAAH,wRAaJC,EAAWD,EAAAA,GAAAA,GAAH,ycAkBRE,EAAQF,EAAAA,GAAAA,IAAH,yCAILG,EAAWH,EAAAA,GAAAA,EAAH,6CAIRI,EAAOJ,EAAAA,GAAAA,EAAH,4E,SCDjB,EAnCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACJL,IACFM,EAAAA,EAAAA,IAAQC,OAAOP,IACZQ,MAAK,SAAAC,GAAI,OAAIL,EAAYK,EAAKC,KAArB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GAKjB,GAAE,CAACf,KAGF,SAACN,EAAD,UACGS,EAASa,OAAS,GACjBb,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,UAACzB,EAAD,YACE,SAACC,EAAD,CACEyB,IACEF,EAAY,0CAC2BA,GAD3B,sCAIdG,IAAKJ,KAEP,SAACrB,EAAD,UAAWqB,KACX,SAACpB,EAAD,UAAOsB,GAAa,cAVPH,EADJ,KAgBpB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ListItem = styled.li`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  font-size: 14px;\n  width: 130px;\n  /* &:not(:last-child) {\n    margin-bottom: 15px;\n  } */\n  margin-bottom: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 130px;\n`;\n\nexport const TextName = styled.p`\n  font-weight: 700;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  padding: 0;\n  margin-bottom: 7px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from 'api/fetchAPI';\nimport { Image, List, ListItem, Text, TextName } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      getCast(Number(movieId))\n        .then(data => setCastList(data.cast))\n        .catch(error => console.log(error.message));\n    }\n    if (movieId === null) {\n      return;\n    }\n  }, [movieId]);\n\n  return (\n    <List>\n      {castList.length > 0 &&\n        castList.map(({ id, name, profile_path, character }) => (\n          <ListItem key={id}>\n            <Image\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : `https://via.placeholder.com/100x150`\n              }\n              alt={name}\n            />\n            <TextName>{name}</TextName>\n            <Text>{character || 'No info'}</Text>\n          </ListItem>\n        ))}\n    </List>\n  );\n};\nexport default Cast;\n"],"names":["List","styled","ListItem","Image","TextName","Text","movieId","useParams","useState","castList","setCastList","useEffect","getCast","Number","then","data","cast","catch","error","console","log","message","length","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}