{"version":3,"file":"static/js/257.a2e0fe5c.chunk.js","mappings":"yQAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iKAWPE,GAAUF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kbAkBPG,EAAUH,EAAAA,GAAAA,IAAH,8DAIPI,EAAQJ,EAAAA,GAAAA,IAAH,qFAMLK,EAAQL,EAAAA,GAAAA,GAAH,gEAKLM,EAAWN,EAAAA,GAAAA,GAAH,gEAIRO,EAAWP,EAAAA,GAAAA,GAAH,gEAKRQ,EAAOR,EAAAA,GAAAA,EAAH,uFAMJS,EAAiBT,EAAAA,GAAAA,IAAH,wLAMdU,EAAiBV,EAAAA,GAAAA,GAAH,+C,SCW3B,EA7DqB,WAAO,IAAD,IACjBW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAa,qBADFC,EAAAA,EAAAA,MACcC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAU9C,IARAC,EAAAA,EAAAA,YAAU,WACJT,IACFU,EAAAA,EAAAA,IAASC,OAAOX,IACbY,MAAK,SAAAC,GAAI,OAAIT,EAASS,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GAEjB,GAAE,CAAClB,KAECG,EACH,OAAO,KAET,IAAQgB,EAAuDhB,EAAvDgB,YAAaC,EAA0CjB,EAA1CiB,MAAOC,EAAmClB,EAAnCkB,aAAcC,EAAqBnB,EAArBmB,SAAUC,EAAWpB,EAAXoB,OACpD,OACE,4BACE,SAAChC,EAAD,CAASiC,GAAInB,EAAb,4BACA,UAACb,EAAD,YACE,SAACC,EAAD,CACEgC,IACEN,EAAW,0CAC4BA,GAD5B,sCAIbO,IAAI,+CAEN,4BACE,UAAChC,EAAD,WACG0B,EADH,IACW,IAAIO,KAAKN,GAAcO,eAAiB,UADnD,QAGA,SAACjC,EAAD,wBACA,SAACE,EAAD,UAAOyB,KACP,mCAEEC,GAAUpB,EAAMoB,OAAOM,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,OAC7C,wBAIN,UAAClC,EAAD,YACE,SAACF,EAAD,sCAEA,UAACG,EAAD,YACE,yBACE,SAACX,EAAD,CAASoC,GAAG,OAAZ,qBAEF,yBACE,SAACpC,EAAD,CAASoC,GAAG,UAAZ,8BAIN,SAAC,EAAAS,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavItem = styled(NavLink)`\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration: none;\n  color: #343333;\n  &:hover,\n  &:focus {\n    color: #f94ae7;\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  text-decoration: none;\n  background-color: #f2efef;\n  color: #343333;\n  margin-left: 5px;\n  padding-left: 2px;\n  padding-right: 2px;\n  margin-top: 5px;\n  /* border-radius: 3px; */\n  border: 1px solid #ccc;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #f94ae7;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-top: 4px;\n`;\nexport const Image = styled.img`\n  margin-right: 10px;\n  margin-left: 5px;\n  width: 200px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  color: #343333;\n`;\n\nexport const Overview = styled.h3`\n  font-weight: 700;\n  color: #343333;\n`;\nexport const TitleAdd = styled.h4`\n  font-weight: 700;\n  color: #343333;\n`;\n\nexport const Text = styled.p`\n  color: #343333;\n  font-family: Roboto;\n  font-size: 18px;\n`;\n\nexport const WrapperAddInfo = styled.div`\n  border: 1px solid #ccc;\n  box-shadow: 0px 1px 3px -1px rgba(0, 0, 0, 0.36),\n    0px 1px 1px -1px rgba(0, 0, 0, 0.1), 0px 1px 1px -1px rgba(0, 0, 0, 0.02);\n`;\n\nexport const ListForAddInfo = styled.ul`\n  list-style: square;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { getMovie } from 'api/fetchAPI';\n\nimport {\n  Wrapper,\n  Image,\n  Overview,\n  Title,\n  Text,\n  WrapperAddInfo,\n  TitleAdd,\n  ListForAddInfo,\n  NavItem,\n  BtnLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backToPageBtn = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (movieId) {\n      getMovie(Number(movieId))\n        .then(data => setMovie(data))\n        .catch(error => console.log(error.message));\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n  const { poster_path, title, release_date, overview, genres } = movie;\n  return (\n    <div>\n      <BtnLink to={backToPageBtn}>â¬…Go back</BtnLink>\n      <Wrapper>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : `https://via.placeholder.com/200x100`\n          }\n          alt=\"{movie.title || movie.name || 'No title'}\"\n        />\n        <div>\n          <Title>\n            {title}({new Date(release_date).getFullYear() || 'No info'})\n          </Title>\n          <Overview>Overview</Overview>\n          <Text>{overview}</Text>\n          <h4>Genres</h4>\n\n          {(genres && movie.genres.map(g => g.name).join(', ')) ||\n            'No genres info'}\n        </div>\n      </Wrapper>\n\n      <WrapperAddInfo>\n        <TitleAdd>Additional information</TitleAdd>\n\n        <ListForAddInfo>\n          <li>\n            <NavItem to=\"cast\">Cast</NavItem>\n          </li>\n          <li>\n            <NavItem to=\"reviews\">Reviews</NavItem>\n          </li>\n        </ListForAddInfo>\n      </WrapperAddInfo>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["NavItem","styled","NavLink","BtnLink","Wrapper","Image","Title","Overview","TitleAdd","Text","WrapperAddInfo","ListForAddInfo","movieId","useParams","useState","movie","setMovie","backToPageBtn","useLocation","state","from","useEffect","getMovie","Number","then","data","catch","error","console","log","message","poster_path","title","release_date","overview","genres","to","src","alt","Date","getFullYear","map","g","name","join","Suspense","fallback"],"sourceRoot":""}